snippet l "let" b
let ${1:_} = ${2:expr};
endsnippet

snippet if "if" b
if ${1:true} {
	${2}
}
endsnippet

snippet ifl "if let" b
if Some(${1:true}) = ${2:exp} {
	${3}
}
endsnippet

snippet impl "impl" b
impl ${1} {
	${2}
}
endsnippet

snippet simpl "struct and impl" b
struct $1 {
	$2
}

impl $1 {
	pub fn new() -> Self {
		$1 {
			$2
		}
	}
}
endsnippet

snippet implf "impl for" b
impl ${1} for ${2:Trait} {
	${3}
}
endsnippet

snippet fn "fn" b
fn ${1:name}(${2}) {
	${3}
}
endsnippet

snippet pfn "pub fn" b
pub fn ${1:name}(${2}) {
	${3}
}
endsnippet

snippet mfn "method fn" b
pub fn ${1:name}(&self) {
	${3}
}
endsnippet

snippet new "new" b
pub fn new(${1}) -> Self {
	${2}
}
endsnippet

snippet t "test" b
#[test]
fn ${1:test_name}() {
	$2
}
endsnippet

snippet modtest "mod test" b
#[cfg(test)]
mod tests {
	use super::*;

	$1
}
endsnippet

# vim: set sw=4 ts=4 expandtab ft=snippets:
